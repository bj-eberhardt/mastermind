name: Create screenshot

on:
  workflow_dispatch:
  workflow_run:
    workflows: ['Build and release']
    types:
      - completed

jobs:
  screenshot:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ“¥ Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: ðŸ”§ Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Build Docker image
        run: |
          docker build -t mastermind-vue:test .

      - name: Test Docker image
        run: |
          docker run -d -p 8080:80 --name test-container mastermind-vue:test
          sleep 5
          curl --fail http://localhost:8080 && curl -s http://localhost:8080 | grep -q "<title>Mastermind</title>" || (docker logs test-container && exit 1)

      - name: Install dependencies
        run: npm install puppeteer

      - name: Create Puppeteer screenshot script and run it
        run: node scripts/screenshot.js

      - name: Upload screenshot artifact
        uses: actions/upload-artifact@v4
        with:
          name: ui-screenshot
          path: img/
          retention-days: 7

      - name: Commit & push changed screenshots
        env:
          GIT_AUTHOR_NAME: GitHub Actions
          GIT_AUTHOR_EMAIL: actions@github.com
          GIT_COMMITTER_NAME: GitHub Actions
          GIT_COMMITTER_EMAIL: actions@github.com
        run: |
          changed=0
          for file in img/*.png; do
            if ! git diff --quiet "$file"; then
              echo "Changes detected in $file"
              git add "$file"
              changed=1
            fi
          done

          if [ "$changed" -eq 1 ]; then
            git commit -m "chore: update changed screenshots [skip ci]"
            git push origin HEAD:${{ github.ref }}
          else
            echo "Keine Ã„nderungen â€“ nichts zu committen"
          fi

      - name: Stop docker image
        run: |
          docker stop test-container
